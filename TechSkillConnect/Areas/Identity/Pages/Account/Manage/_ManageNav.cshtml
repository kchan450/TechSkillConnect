@inject SignInManager<IdentityUser> SignInManager
@{
    var user = User;
    var userRole = user.IsInRole("Tutor") ? "Tutor" : user.IsInRole("Learner") ? "Learner" : null;
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a>
    </li>

   @*  @if (userRole == "Tutor")
    {
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.TutorProfileNavClass(ViewContext)" id="tutor-profile" asp-page="/Tutorpage/TutorProfile">Tutor Profile</a>
        </li>
    }
    else if (userRole == "Learner")
    {
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.LearnerProfileNavClass(ViewContext)" id="learner-profile" asp-page="/Learnerpage/LearnerProfile">Learner Profile</a>
        </li>
    } *@

    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a>
    </li>

    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
</ul>
